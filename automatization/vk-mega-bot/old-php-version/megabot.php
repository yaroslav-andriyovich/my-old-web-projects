<?php

ini_set('error_reporting', E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);

/* ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
   ‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù
   ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   
   ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ïö‚ïê‚ïù   */ 

$GLOBALS["_bot"]      = '#PAGE_TOKEN#'; // page token
$GLOBALS["bot_token"] = '#GROUP_TOKEN#'; // group token

function SetStatus() { 

    $stats = json_decode(file_get_contents("json/stats.json"), true);
    
    date_default_timezone_set("Europe/Moscow"); 

    $result2 = "üìÖ ".date("d.m.Y")." | ‚åö ".date("H:i")." | üì•: ".$stats['taken']." | üì§: ".$stats['sent'];
    $params3 = array('text' => $result2, 'group_id' => "166188343", 'access_token' => $GLOBALS["_bot"], 'v' => '5.87');
    $params3 = http_build_query($params3);
    $query2 = file_get_contents('https://api.vk.com/method/status.set?'.$params3);
    
 } /* –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å */
        
 function SetOnline() { 
            
    $params = array('access_token' => $GLOBALS["_bot"], 'v' => '5.87');
        
        $params = http_build_query($params);
        $query = file_get_contents('https://api.vk.com/method/account.setOnline?'.$params);

 } /* –û–±–Ω–æ–≤–ª—è–µ–º –æ–Ω–ª–∞–π–Ω —Å –ü–ö */

 /* sms */

 function SetBbool($_id) {

    if ($_id > 1999999999) { $bb_answer["type_id"] = "chat_id"; $bb_answer["id"] = $_id - 2000000000; }
    else { $bb_answer["type_id"] = "user_id"; $bb_answer["id"] = $_id; }

    return $bb_answer;

 } /* –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ $bbool + user_id || chat_id */

function SendMessage($_id, $_text, $_att_type = null, $_att = array(null, null)) {

$params = array('message'          => $_text,
                /* $uID               => $_id, */
                SetBbool($_id)["type_id"] => SetBbool($_id)["id"],
                'group_id'         => '166188343',
                'random_id'        => "0",
                'access_token'     => $GLOBALS["bot_token"],
                'v'                => '5.87');
    if ($_att_type == "photo") { $params["attachment"] = "photo".$_att[0]."_".$_att[1]; }
    echo "<pre>"; print_r($params); echo "</pre>";
$params = http_build_query($params);

$msgs = json_decode(file_get_contents("json/msgs.json"), true);
array_push($msgs["messages"], $params);
file_put_contents("json/msgs.json", json_encode($msgs));

} /* –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É */

function Send() {
    
    $msgs    = json_decode(file_get_contents("json/msgs.json"), true);

    if (count($msgs["messages"]) <= 0) return;
    $_params = current($msgs["messages"]);
    
    array_shift($msgs["messages"]);
    
    file_put_contents("json/msgs.json", json_encode($msgs));
    
    $total_answers = json_decode(file_get_contents("json/stats.json"), true);
    $total_answers['sent'] = $total_answers['sent'] + 1;
    file_put_contents("json/stats.json", json_encode($total_answers));

    $query  = file_get_contents('https://api.vk.com/method/messages.send?'.$_params);
    $result = json_decode($query, true);
    
    echo "<pre>"; print_r($result); echo "</pre>";
    
    } /* –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */

    function Logger($_msg) { //–æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è <-- –¢–£–¢
    
        $params = array('message'      => $_msg,
                        'chat_id'      => '1',
                        'group_id'     => '166188343',
                        'access_token' => $GLOBALS["bot_token"],
                        'v'            => '5.87');
        $params = http_build_query($params);
        file_get_contents('https://api.vk.com/method/messages.send?'.$params);
    
    } /* –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∞ –æ—Ç –ª–∏—Ü–∞ –≥—Ä—É–ø–ø—ã */

 /* sms */

function Ban($_id, $_reason, $_comment) {

    $params = array('owner_id'     => $_id,
                    'group_id'     => '166188343',
                    'reason'       => $_reason,
                    'comment'      => "[".date("d.m.Y")." | ".date("H:i")."]".$_comment,
                    'comment_visible' => '1',
                    'access_token' => $GLOBALS["_bot"],
                    'v'            => '5.87');
    $params = http_build_query($params);
    $query  = file_get_contents('https://api.vk.com/method/groups.ban?'.$params);

} /* –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ */

function UnBan($_id) {

    $params = array('owner_id' => $_id, 'group_id' => '166188343', 'access_token' => $GLOBALS["_bot"], 'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/groups.unban?'.$params);
    
} /* –£–±—Ä–∞—Ç—å –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ */

function Banned($_id) {

    $params = array('user_id' => $_id,
                    'group_id' => '166188343',
                    'access_token' => $GLOBALS["bot_token"],
                    'v' => '5.87');
    $params = http_build_query($params);
    $query  = file_get_contents('https://api.vk.com/method/groups.isMember?'.$params);
    $result = json_decode($query, true);

    if ($result["response"] == 0) return true;
    
} /* –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–µ, —Ç–æ –æ–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è */

function addFriend($_id) {
    
    $params = array('user_id' => $_id, 'access_token' => $GLOBALS["_bot"], 'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/friends.add?'.$params);
} /* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è */

function deleteFriend($_id) {
    
    $params = array('user_id' => $_id, 'access_token' => $GLOBALS["_bot"], 'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/friends.delete?'.$params);
} /* –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ –¥—Ä—É–∑—å—è */ 

function checkRequestAdd() {

    $params = array('need_viewed' => "1",
                   'access_token' => $GLOBALS["_bot"],
                              'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/friends.getRequests?'.$params);
    $result = json_decode($query, true);

    if (!isset($result["response"]["items"])) return;

    foreach ($result["response"]["items"] as $index => $elem) {

        $_newID = $result["response"]["items"][$index];

        addFriend($_newID);
    }
} /* –ü—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è */

function checkRequestDeleted() {
    
    $params = array('need_viewed' => "1", "out" => "1", 'access_token' => $GLOBALS["bot_token"], 'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/friends.getRequests?'.$params);
    $result = json_decode($query, true);

    if (!isset($result["response"]["items"])) return;

    foreach ($result["response"]["items"] as $index => $elem) {

        $_newID = $result["response"]["items"][$index];
        deleteFriend($_newID);
    }

} /* –ë–∞–Ω–∏–º –≤—Å–µ—Ö –∫—Ç–æ —É–¥–∞–ª–∏–ª –±–æ—Ç–∞ –∏–∑ –¥—Ä—É–∑–µ–π */

function GetUserId($_id) {

    $params = array('screen_name' => $_id, 'access_token' => $GLOBALS["_bot"], 'v' => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/utils.resolveScreenName?'.$params);
    $result = json_decode($query, true);

    if (isset($result["response"]["type"]))      $GLOBALS["id_as_screen_name"]["type"]      = $result["response"]["type"];
    if (isset($result["response"]["object_id"])) $GLOBALS["id_as_screen_name"]["object_id"] = $result["response"]["object_id"];

} /* –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ domain -> User/Group && id */

function LongPollServer() { 

    $params = array('group_id' => '166188343', 'access_token' => $GLOBALS["bot_token"], 'v' => '5.87');
    $params = http_build_query($params);    
    $query = file_get_contents('https://api.vk.com/method/groups.getLongPollServer?'.$params);
    $result = json_decode($query, true);
    
    $GLOBALS["key"]    = $result['response']['key'];
    $GLOBALS["server"] = $result['response']['server'];
    $GLOBALS["ts"]     = file_get_contents("txt/ts_bot.txt");
    $GLOBALS["new_ts"] = $result['response']['ts'];

    echo "TS: ".$GLOBALS["ts"]."<br/>"."Server: ".$GLOBALS["server"]."<br/>"."Key: ".$GLOBALS["key"]."<br/>"."<br/>";
    
} /* –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä */

function LongPollHistory() { 

    $params = array('key' => $GLOBALS["key"],
                    'ts'  => $GLOBALS["ts"],
                    'act' => "a_check");
    $query = file_get_contents($GLOBALS["server"]."?".http_build_query($params));
    $result = json_decode($query, true);
    print_r($query);
    $GLOBALS["msg_treatment"] = $result["updates"];

} /*–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä*/

function GetUserInfo($_id) {

    $params = array('user_ids'     => $_id,
                    'access_token' => $GLOBALS["bot_token"],
                    'fields'       => 'first_name,last_name,id,city,bdate,counters,domain,followers_count,photo_id,is_friend',
                    'v'            => '5.87');
    $params = http_build_query($params);
    $query = file_get_contents('https://api.vk.com/method/users.get?'.$params);
    $result = json_decode($query, true);

    $GLOBALS["uInfo"]["id"] = $result["response"][0]["id"];
    $GLOBALS["uInfo"]["domain"] = $result["response"][0]["domain"];
    $GLOBALS["uInfo"]["first_name"] = $result["response"][0]["first_name"];
    $GLOBALS["uInfo"]["last_name"] = $result["response"][0]["last_name"];
    
    if (isset($result["response"][0]["followers_count"])) $GLOBALS["uInfo"]["followers_count"] = $result["response"][0]["followers_count"];
    if (isset($result["response"][0]["bdate"])) $GLOBALS["uInfo"]["bdate"]                     = $result["response"][0]["bdate"];
    if (isset($result["response"][0]["city"])) $GLOBALS["uInfo"]["city"]                       = $result["response"][0]["city"]["title"];
    if (isset($result["response"][0]["home_town"])) $GLOBALS["uInfo"]["home_town"]             = $result["response"][0]["home_town"];
    if (isset($result["response"][0]["country"])) $GLOBALS["uInfo"]["country"]                 = $result["response"][0]["country"]["title"];
    if (isset($result["response"][0]["photo_id"])) $GLOBALS["uInfo"]["photo_id"]               = $result["response"][0]["photo_id"];

    if (isset($result["response"][0]["counters"]["albums"])) $GLOBALS["uInfo"]["albums"]                 = $result["response"][0]["counters"]["albums"];
    if (isset($result["response"][0]["counters"]["videos"])) $GLOBALS["uInfo"]["videos"]                 = $result["response"][0]["counters"]["videos"];
    if (isset($result["response"][0]["counters"]["audios"])) $GLOBALS["uInfo"]["audios"]                 = $result["response"][0]["counters"]["audios"];
    if (isset($result["response"][0]["counters"]["photos"])) $GLOBALS["uInfo"]["photos"]                 = $result["response"][0]["counters"]["photos"];
    if (isset($result["response"][0]["counters"]["friends"])) $GLOBALS["uInfo"]["friends"]               = $result["response"][0]["counters"]["friends"];
    if (isset($result["response"][0]["counters"]["groups"])) $GLOBALS["uInfo"]["groups"]                 = $result["response"][0]["counters"]["groups"];
    if (isset($result["response"][0]["counters"]["online_friends"])) $GLOBALS["uInfo"]["online_friends"] = $result["response"][0]["counters"]["online_friends"];
    if (isset($result["response"][0]["counters"]["mutual_friends"])) $GLOBALS["uInfo"]["mutual_friends"] = $result["response"][0]["counters"]["mutual_friends"];
    if (isset($result["response"][0]["counters"]["pages"])) $GLOBALS["uInfo"]["pages"]                   = $result["response"][0]["counters"]["pages"];
    
} /* –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */

function CheckNoRepeats() {

    $repeats = file_get_contents("json/repeats.json");
    $repeats = json_decode($repeats, true);

    if (count($repeats) == 0) return;

    foreach ($repeats as $index => $elem) {

    if (time() > $repeats[$index]["last_msg"]) unset($repeats[$index]);

    }

    file_put_contents("json/repeats.json", json_encode($repeats));

} /* –ï—Å–ª–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –±—ã–ª–æ –±–æ–ª—å—à–µ –¥–≤—É—Ö –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥, —Ç–æ —É–¥–∞–ª—è–µ–º —é–∑–≤–µ—Ä—è –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ */

function ClearBlockTxt() {

    $ssCheck = file_get_contents("json/safety_system.json");
    $ssCheck = json_decode($ssCheck, true);

    if (count($ssCheck) == 0) return;

    foreach ($ssCheck as $index => $elem) {

    unset($ssCheck[$index]);

    }

    file_put_contents("json/safety_system.json", json_encode($ssCheck));

} /* –ï—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ–±—ã–ª–æ */ 

function CheckFastMessages() {

    $fast = file_get_contents("json/fast_msgs.json");
    $fast = json_decode($fast, true);

    if (count($fast) == 0) return;

    foreach ($fast as $index => $elem) {

    if (time() > $fast[$index]["time"]+(30)) unset($fast[$index]);

    }

    file_put_contents("json/fast_msgs.json", json_encode($fast));

} /* –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ 10 —Å–µ–∫—É–Ω–¥ */

function gtranslate($str, $lang_from, $lang_to) {
    $query_data = array(
      'client' => 'x',
      'q' => $str,
      'sl' => $lang_from,
      'tl' => $lang_to
    );
    $filename = 'http://translate.google.ru/translate_a/t';
    $options = array(
      'http' => array(
        'user_agent' => 'Mozilla/5.0 (Windows NT 6.0; rv:26.0) Gecko/20100101 Firefox/26.0',
        'method' => 'POST',
        'header' => 'Content-type: application/x-www-form-urlencoded',
        'content' => http_build_query($query_data)
      )
    );
    $context = stream_context_create($options);
    $response = file_get_contents($filename, false, $context);
    return json_decode($response);
  } /* –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –≥—É–≥–ª—å */

  function ABSvk($_str) {

    $shit_detected = false;

    $_str = mb_ereg_replace(" \t\n\r\0\x0B", "", $_str);
    $_str = str_replace(' ', '', $_str);
    $_str = str_replace('_', '', $_str);
    $_str = str_replace('-', '', $_str);
    $_str = str_replace(',', '', $_str);
    $_str = preg_replace('/\d+/u', '', $_str);
    
    switch(true) {
        case strpos($_str, "http") !== FALSE:
        case strpos($_str, "www") !== FALSE:
        case strpos($_str, ".co") !== FALSE:
        case strpos($_str, ".ua") !== FALSE:
        case strpos($_str, ".ru") !== FALSE:
        case strpos($_str, ".—Ä—É") !== FALSE:
        case strpos($_str, ".—Ä—Ñ") !== FALSE:
        case strpos($_str, ".pe") !== FALSE:
        case strpos($_str, ".—Ä–µ") !== FALSE:
        case strpos($_str, ".—Äe") !== FALSE:
        case strpos($_str, ".p–µ") !== FALSE:
        case strpos($_str, ".net") !== FALSE:
        case strpos($_str, ".io") !== FALSE:
        case strpos($_str, ".me") !== FALSE:
        case strpos($_str, ".de") !== FALSE:
        case strpos($_str, ".org") !== FALSE:
        case strpos($_str, ".in") !== FALSE:
        case strpos($_str, ".tv") !== FALSE:
        case strpos($_str, ".br") !== FALSE:
        case strpos($_str, ".ly") !== FALSE:
        case strpos($_str, ".cn") !== FALSE:
        case strpos($_str, ".it") !== FALSE:
        case strpos($_str, ".uk") !== FALSE:
        case strpos($_str, ".us") !== FALSE:
        case strpos($_str, ".pro") !== FALSE:
        case strpos($_str, ".gg") !== FALSE:
        case strpos($_str, ".om") !== FALSE:
        case strpos($_str, ".su") !== FALSE:
        case strpos($_str, ".info") !== FALSE:
        case strpos($_str, ".biz") !== FALSE:
        case strpos($_str, ".xyz") !== FALSE:
        case strpos($_str, ".top") !== FALSE:
        case strpos($_str, ".app") !== FALSE:
        case strpos($_str, ".edu") !== FALSE:
        case strpos($_str, ".mobi") !== FALSE:
        case strpos($_str, ".on") !== FALSE:
        case strpos($_str, ".xx") !== FALSE:
        case strpos($_str, ".zone") !== FALSE:
        case strpos($_str, ".–∫–æ–º") !== FALSE:
        case strpos($_str, ".–∏–æ") !== FALSE:
        case strpos($_str, ".—é–∞") !== FALSE:
        case strpos($_str, "vkrobot") !== FALSE:
        case strpos($_str, "vto") !== FALSE:
        case strpos($_str, "mix") !== FALSE:
        case strpos($_str, "/") !== FALSE: $shit_detected = true;
        break;
      } /* find shit */

    if ($shit_detected) { 
        
        $ss     = json_decode(file_get_contents("json/safety_system.json"), true);
        $ss_id  = $GLOBALS["c_id"];
        $ss_txt = "üìõ–í–Ω–∏–º–∞–Ω–∏–µ! –í—Å–µ–º –ª–µ–∂–∞—Ç—å, —Ä—É–∫–∏ –∑–∞-–≥–æ–ª–æ–≤–£! –†–∞–±–æ—Ç–∞–µ—Ç –ë–ê–ë–£-–ù–ê–ë–£, –ø—Ö—É —Ç—ã.. –°–ë–£!üìõ\n‚ö†[–ó–ê–ú–ï–ß–ï–ù –ó–ê–ü–†–ï–©–ï–ù–ù–´–ô –¢–ï–ö–°–¢]‚ö†\n\n–£–≤–∞–∂–∞–µ–º—ã–π [id$ss_id|–Æ–∑–≤–µ—Ä—å] -> –µ—Å–ª–∏ –í—ã –Ω–µ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö - –í—ã –±—É–¥–µ—Ç–µ –∑–∞–±–∞–Ω–µ–Ω—ã!üö´\n\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ";

        if (!isset($ss[$ss_id])) { $ss[$ss_id] = 3; SendMessage($GLOBALS["c_bid"], $ss_txt.$ss[$ss_id]); } 
        else if ($ss[$ss_id] != 0) { $ss[$ss_id] = $ss[$ss_id] - 1; SendMessage($GLOBALS["c_bid"], $ss_txt.$ss[$ss_id]); }
        else if ($ss[$ss_id] == 0) { 
            unset($ss[$ss_id]); 
            SendMessage($GLOBALS["c_bid"], "‚õî –ë–∞–Ω –ë–õ–Ø–¢–¨! (c) Hard Play");
            SendMessage(2000000001, "üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[BAN] [id".$_id."| –Æ–∑–≤–µ—Ä—å] –∑–∞–±–Ω–µ–Ω.");
            Ban($ss_id, 4, "–ó–∞–ø—Ä–µ—Ç.—Ç–µ–∫—Å—Ç –≤ —Å–º—Å: $str");
        }

        file_put_contents("json/safety_system.json", json_encode($ss));

        return true;
     } else return false;

    } /* Anti Block System */

    /* function Stats() */
    function Stats($_cmd_name) { if ($GLOBALS["c_id"] == "245855787") return;

        $stats = json_decode(file_get_contents("json/stats.json"), true);

        $stats["{$_cmd_name}"] = $stats["{$_cmd_name}"] + 1;

        file_put_contents("json/stats.json", json_encode($stats));

    } /* –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥ */

    function CreateImage($_id, $_text, $_type, $_bg = null) {

        $params = array('user_ids'     => $_id,
                        'access_token' => $GLOBALS["bot_token"],
                        'fields'       => 'first_name,last_name,photo_max',
                        'v'            => '5.87');
        $params = http_build_query($params);
        $query = file_get_contents('https://api.vk.com/method/users.get?'.$params);
        $result = json_decode($query, true);

        $ava      = $result["response"][0]["photo_max"];
        $username = $result["response"][0]["first_name"]." ".$result["response"][0]["last_name"];

        $myDomainPath = "http://my-site.com/";

        $params2 = array('type'     => $_type,
                         'ava'      => $ava,
                         'username' => $username,
                         'text'     => $_text,
                         'heroku'   => "test");
        $params2 = http_build_query($params2);
        $query2 = file_get_contents($myDomainPath.'megabot/cmd.php?'.$params2);
        // $query2 = explode("\n", $query2);
        // $_p = $myDomainPath."megabot/".$query2;
        $_p = $query2;

        return $_p;
    
    } /* –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —Ç.–¥. */

    function ClearImages($_arrDir = array()) {
        foreach ($_arrDir as $dir) {
        $files = glob("images/".$dir."/*");
        $c = count($files);
        if ($c == 0) continue;
        if (count($files) > 0) {
            foreach ($files as $file) {      
                if (file_exists($file)) {
                unlink($file);
                }   
            }
         }
       }
     } /* –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ –ø–∞–ø–∫–∏ */

    function GetPhoto($_photo_file_name, $_peer_id) {

        $params = array('peer_id'      => $_peer_id, 
                        'access_token' => $GLOBALS["bot_token"], 
                        'v'            => '5.87');
        $params = http_build_query($params);
        $query  = file_get_contents('https://api.vk.com/method/photos.getMessagesUploadServer?'.$params);
        $result = json_decode($query, true);
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–∫–∏ –≥—Ä—É–ø–ø—ã

        // echo "<pre>"; print_r($result); echo "</pre>";

        $url = $result["response"]["upload_url"];

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
        $file = new CURLFile(realpath($_photo_file_name));
        $post_data = array("photo" => $file);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
        $_server = json_decode(curl_exec($ch), true);
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä

        // echo "<pre>"; print_r($_server); echo "</pre>";

        $params = array('server'       => $_server["server"],
                        'hash'         => $_server["hash"],
                        'photo'        => $_server["photo"],
                        'access_token' => $GLOBALS["bot_token"], 
                        'v'            => '5.87');
        $params = http_build_query($params);
        $query  = file_get_contents('https://api.vk.com/method/photos.saveMessagesPhoto?'.$params);
        $result = json_decode($query, true);
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ

        // echo "<pre>"; print_r($result); echo "</pre>";

        $_gphoto = [$result["response"][0]["owner_id"], $result["response"][0]["id"]];

        return $_gphoto;

    } /* –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö */

    function CheckPremium($_id) {

        $prem = json_decode(file_get_contents("json/premium_list.json"), true);
        if (array_key_exists($_id, $prem) != 1) return false;
        else return true;
    
    } /* –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞ —É —é–∑–≤–µ—Ä—è */

    function SetPremium($_id, $_status, $_month) {

        $prem = json_decode(file_get_contents("json/premium_list.json"), true);

        if ($_status == "set") { 
            $date = date('d.m.Y', strtotime("+".$_month." month", time())); 
            $prem[$_id]["date"]   = $date;
            $prem[$_id]["accost"] = "–º–µ–≥–∞";
            $prem[$_id]["mbshow"] = true;
            Logger("üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[PREMIUM] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è [id".$_id."| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –¥–æ {$date}");
            SendMessage($_id, "üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[PREMIUM] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è [id".$_id."| –í–∞—Å] –¥–æ {$date}");
        } else if ($_status == "unset")  {
             unset($prem[$_id]); 
             Logger("üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[PREMIUM] –£ [id".$_id."| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∑–∞–∫–æ–Ω—á–∏–ª—Å—è.");
             SendMessage($_id, "üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[PREMIUM] –ó–∞–∫–æ–Ω—á–∏–ª—Å—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –≠—Ç–∏–º –í—ã —Å–∏–ª—å–Ω–æ –ø–æ–º–æ–≥–ª–∏ –ø—Ä–æ–µ–∫—Ç—É. –ï—Å–ª–∏ –±—É–¥–µ—Ç –µ—â–µ –∂–µ–ª–∞–Ω–∏–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ Premium-Status - –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å, –ø–∏—à–∏—Ç–µ.");
        }

        file_put_contents("json/premium_list.json", json_encode($prem));
        return "üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[PREMIUM] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è [id".$_id."| –í–∞—Å] –¥–æ {$date}";

     } /* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ || –£–¥–∞–ª–µ–Ω–∏–µ Premium —Å—Ç–∞—Ç—É—Å–∞ */

     function CheckPremiumDate() {
        $prem = json_decode(file_get_contents("json/premium_list.json"), true);
        foreach ($prem as $key => $value) {

            if (strtotime($prem[$key]["date"]) <= time()) {
                SetPremium($key, "unset", "");
            }
        }
    } /* –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –ø—Ä–µ–º–∏—É–º–∞ */


function MessageTreatment() {

        foreach ($GLOBALS["msg_treatment"] as $index => $elem) {

            if ($GLOBALS["msg_treatment"][$index]["type"] != "message_new") continue;

        $str = mb_strtolower($GLOBALS["msg_treatment"][$index]["object"]["text"]);    
        
        $uId  = $GLOBALS["msg_treatment"][$index]["object"]["from_id"];
        $GLOBALS["c_id"] = $uId;
        if (Banned($uId) == true) continue;

        $total_answers = json_decode(file_get_contents("json/stats.json"), true);
        $total_answers['taken'] = $total_answers['taken'] + 1;
        file_put_contents("json/stats.json", json_encode($total_answers));

        /* if (strpos($str, "–±–æ—Ç,") !== 0) continue; */
        $prem = json_decode(file_get_contents("json/premium_list.json"), true);
        if (CheckPremium($uId) == true) { if (strpos($str, $prem[$uId]["accost"]) !== 0) continue; }
        else if (strpos($str, "–º–µ–≥–∞") !== 0) continue; 
        if (mb_strlen($str, 'UTF-8') > 700) continue;

        $bId  = $GLOBALS["msg_treatment"][$index]["object"]["peer_id"];
        $GLOBALS["c_bid"] = $bId;

        $user_id = $bId;

        $fast = file_get_contents("json/fast_msgs.json");
        $fast = json_decode($fast, true);
        if (isset($fast[$uId]) && time() > $fast[$uId]["time"]) { $fast[$uId]["count"] = 1; $fast[$uId]["time"] = time()+15;}
        if (!isset($fast[$uId])) { $fast[$uId]["count"] = 1; $fast[$uId]["time"] = time()+15;}
        else $fast[$uId]["count"] = $fast[$uId]["count"] + 1;
            if ($fast[$uId]["count"] > 5) { 
                continue;
            }

        file_put_contents("json/fast_msgs.json", json_encode($fast));

        if (!CheckPremium($uId)) { $str = mb_ereg_replace("–º–µ–≥–∞", "", $str); }
        else { $str = mb_ereg_replace($prem[$uId]["accost"], "", $str); }
        $str = trim($str, " \t\n\r\0\x0B");
        $str = mb_ereg_replace(" \t\n\r\0\x0B", " ", $str);

        $strSplit = explode(" ", $str);

        // $msg_id = $GLOBALS["msg_treatment"][$index]["object"]["conversation_message_id"];

        $repeats = file_get_contents("json/repeats.json");
        $repeats = json_decode($repeats, true);

        if ($str == $repeats[$uId]["text"]) { 

         if ($repeats[$uId]["count"] > 3) {
             if (CheckPremium($uId)) {
                SendMessage($user_id, "–ü–æ–≤–µ–∑–ª–æ —Ç–µ–±–µ! –ß—Ç–æ —É —Ç–µ–±—è –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å. –û—Å—Ç—ã–Ω—å –Ω–µ–º–Ω–æ–≥–æ —Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏, –ø–æ—Ç–æ–º –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞–∑–≥–æ–≤–æ—Ä.");
                SendMessage(2000000001,  "üìüBot-Logger | üìÖ".date("d.m.Y")." | ‚åö".date("H:i:s")."\n\n[id".$uId."| –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –Ω–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –ø–æ–≤—Ç–æ—Ä—ã –∏–∑-–∑–∞ [Premium] –≤ –±–µ—Å–µ–¥–µ ‚Ññ$user_id");
                $repeats[$uId]["count"] = 1;
                file_put_contents("json/repeats.json", json_encode($repeats));
                continue;
             } else {
                Ban($uId, 1, "–ü–æ–≤—Ç–æ—Ä —Å–º—Å: $str");
                unset($repeats[$uId]);
                SendMessage($user_id, "‚õî –ë–∞–Ω –ë–õ–Ø–¢–¨! (c) Hard Play");
                file_put_contents("json/repeats.json", json_encode($repeats));
                continue;
             }
            } else { $repeats[$uId]["count"] = $repeats[$uId]["count"] + 1;
                   $repeats[$uId]["last_msg"] = time()+(30);
                   if ($repeats[$uId]["count"] == 2) { SendMessage($user_id, "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Å—è, –º–µ–Ω—è —ç—Ç–æ –±–µ—Å–∏—Ç.\n–ë—É–¥–µ—à—å –º–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è - –∑–∞–±–∞–Ω—é."); } }

            file_put_contents("json/repeats.json", json_encode($repeats));
            continue;
         } else {
            $repeats[$uId]["text"]     = $str;
            $repeats[$uId]["count"]    = 0;
            $repeats[$uId]["last_msg"] = time()+(30); 
            file_put_contents("json/repeats.json", json_encode($repeats));
         }

         if (!isset($repeats[$uId]["text"])) {
            $repeats[$uId]["text"]     = $str;
            $repeats[$uId]["count"]    = 0;
            $repeats[$uId]["last_msg"] = time()+(30);
            file_put_contents("json/repeats.json", json_encode($repeats));
         }

    /* –ö–æ–º–∞–Ω–¥—ã */

        /* Function Say() */
        if ($strSplit[0] == "—Å–∫–∞–∂–∏") { Stats("say");

            if (!isset($strSplit[1]) || $strSplit[1] == "" || $strSplit[1] == " ") { SendMessage($user_id, "‚ö† –ß—Ç–æ —Å–∫–∞–∑–∞—Ç—å?"); continue; }

            if (ABSvk($str)) continue;

         $str = htmlspecialchars(mb_ereg_replace("—Å–∫–∞–∂–∏", "", $str), ENT_QUOTES);
         SendMessage($user_id, $str);
         continue;
        } /* –ë–æ—Ç, —Å–∫–∞–∂–∏ $str */

        /* Function Matheval() */
        if ($strSplit[0] == "–ø–æ—Å—á–∏—Ç–∞–π" || $strSplit[0] == "–ø–æ—â–∏—Ç–∞–π" || $strSplit[0] == "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞" || $strSplit[0] == "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä" || $strSplit[0] == "math" || $strSplit[0] == "—Å–∫–æ–ª—å–∫–æ" && $strSplit[1] == "–±—É–¥–µ—Ç") { Stats("math");

            function matheval($equation) { 

                $equation = preg_replace("/[^0-99999999999999999999999999+\-.*\/()%]/","",$equation); 
                $equation = preg_replace("/([+-])([0-99999999999999999999999999]{1})(%)/","*(1\$1.0\$2)",$equation); 
                $equation = preg_replace("/([+-])([0-99999999999999999999999999]+)(%)/","*(1\$1.\$2)",$equation);
                $equation = preg_replace("/([0-99999999999999999999999999]+)(%)/",".\$1",$equation); 
                if ( $equation == "" ) { 
                  $return = 0; 
                } else { 
                    try { @eval("\$return=" . $equation . ";" ); } catch (Exception $e) {return "‚ö† –û—à–∏–±–∫–∞ –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö. –ò–ª–∏ —è —Ç—É–ø–æ–π, –∏–ª–∏ —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–ª/–∞üòë";}
                } 
                return $return;  
            }
           
        $str = matheval($str);
        $answer_arr = ["–û—Ç–≤–µ—Ç: ", "–£ –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–æ—Ç —Å—Ç–æ–ª—å–∫–æ: ", "–ù–∞–≤–µ—Ä–Ω–æ–µ –æ—Ç–≤–µ—Ç —Ç–∞–∫–æ–π: ", "–ò–∑–∏, —ç—Ç–æ –±—É–¥–µ—Ç: ", "–í–æ—Ç —Å—Ç–æ–∫–æ: "];
        $rnd = random_int(0, 4);
        $str = $answer_arr[$rnd].$str;
        SendMessage($user_id, $str);
        continue;
         } /* –ë–æ—Ç, –ø–æ—Å—á–∏—Ç–∞–π (5+5)/2 */
        
        /* Function RandomNumber() */
        if ($strSplit[0] == "—Ä–∞–Ω–¥–æ–º") { Stats("random");

            if (ctype_digit($strSplit[1]) && ctype_digit($strSplit[2])) {

            $str = mb_ereg_replace("—Ä–∞–Ω–¥–æ–º", "", $str);
            $str = mb_ereg_replace(" \t\n\r\0\x0B", " ", trim(str_replace(" \t\n\r\0\x0B", "", $str), " \t\n\r\0\x0B"));
            $strSplit2 = explode(" ", $str);

            if ( (int) $strSplit2[0] > 9999999 || (int) $strSplit2[1] > 9999999 ) {
                SendMessage($user_id, "–û–π! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å: 9999999");
            continue;
            }

            SendMessage($user_id, random_int($strSplit2[0], $strSplit2[1]));
            continue;
           } else if (ctype_digit($strSplit2[0]) && !ctype_digit($strSplit2[1]) || !ctype_digit($strSplit2[0]) && !ctype_digit($strSplit2[1])) {
            SendMessage($user_id, "–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: ".random_int(0, 9999999)."\n\n"."‚ö† –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ, –ø–∏—à–∏ —Ç–∞–∫: \"–ë–æ—Ç, —Ä–∞–Ω–¥–æ–º 0 100\" <- –í–∏–¥–∏—à—å, —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ, –∞ –ø–æ—Ç–æ–º –≤—Ç–æ—Ä–æ–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª");
            continue;
           } /* –ë–æ—Ç, —Ä–∞–Ω–¥–æ–º 0 100 */
        }

        /* Function CountryTime() */
        if (strpos($str, "–≤—Ä–µ–º—è") !== FALSE || strpos($str, "–≤—Ä–µ–º–µ–Ω–∏") !== FALSE || strpos($str, "–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å") !== FALSE) { Stats("time");

            date_default_timezone_set("Europe/Kiev"); 
            $time_kiev  = "üá∫üá¶ –ö–∏–µ–≤: ____üìÖ ".date("d.m.y")." | ‚åö ".date("H:i:s")."\n";
            date_default_timezone_set("Europe/Moscow"); 
            $time_msk   = "üá∑üá∫ –ú–æ—Å–∫–≤–∞: _üìÖ ".date("d.m.y")." | ‚åö ".date("H:i:s")."\n";

            SendMessage($user_id, $time_kiev.$time_msk);
            continue;
        } /* –ë–æ—Ç, –≤—Ä–µ–º—è */

        /* Function When() */
        if ($strSplit[0] == "–∫–æ–≥–¥–∞") { if (ABSvk($str)) continue; Stats("when");

            if ($strSplit == "") { SendMessage($user_id, "‚ö† –ß—Ç–æ?"); continue;}

         $str = mb_ereg_replace("–∫–æ–≥–¥–∞", "", $str);
         $str = str_replace("?", "", $str);
         $str = trim($str, " \t\n\r\0\x0B");
         $rnd0 =  random_int(0, 5);
         $days = 30;
         $nedils = 4;
         $month = 12;
         $years = 999;

        switch ($rnd0) {

            case 0: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "‚è≥ –≠—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ ".random_int(1, $days)." –¥–Ω–µ–π.");
                    else SendMessage($user_id, "‚è≥ –ß–µ—Ä–µ–∑ ".random_int(1, $days)." –¥–Ω–µ–π: ".$str);
            break;
            case 1: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "–ù–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —á–µ—Ä–µ–∑ ".random_int(1, $nedils)." –Ω–µ–¥–µ–ª–∏.");
                    else SendMessage($user_id, "‚è≥ –ß–µ—Ä–µ–∑ ".random_int(1, $nedils)." –Ω–µ–¥–µ–ª–∏: ".$str);
            break;
            case 2: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "–Ø –Ω–µ —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å, –Ω–æ –Ω–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ ".random_int(1, $month)." –º–µ—Å—è—Ü–µ–≤.");
                    else SendMessage($user_id, "‚è≥ –ß–µ—Ä–µ–∑ ".random_int(1, $month)." –º–µ—Å—è—Ü–µ–≤: ".$str);
            break;
            case 3: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "–ñ–¥–∞—Ç—å —Ç–µ–±–µ –µ—â–µ –¥–æ–ª–≥–æ.. –¶–µ–ª—ã—Ö ".random_int(1, $years)." –ª–µ—Ç.");
                    else SendMessage($user_id, "‚è≥ –ß–µ—Ä–µ–∑ ".random_int(1, $month)." –ª–µ—Ç: ".$str);
            break;
            case 4: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "–û–ø–∞, —á–∏–∫–∏ –±—Ä–∏–∫–∏! –°–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç ".random_int(1, $days).".".random_int(1, $month).".".random_int(2019, 2100));
                    else SendMessage($user_id, $str." -> —á–µ—Ä–µ–∑ ".random_int(1, $month)." –º–µ—Å—è—Ü–µ–≤. ‚è≥");
            break;
            case 5: $_rnd = random_int(0, 1); if ($_rnd == 0) SendMessage($user_id, "‚è≥ –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ –Ω–µ —Å–ª—É—á–∏—Ç—Å—è.");
                    else SendMessage($user_id, "‚è≥ –ù–∏–∫–æ–≥–¥–∞ \"".$str."\" -> —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç.");
            break;
        }

         continue;
        } /* –ë–æ—Ç, –∫–æ–≥–¥–∞ $str */

        /* Function WhoI() */
        if ($strSplit[0] == "–∫—Ç–æ" && str_replace("?", "", $strSplit[1]) == "—è") {  Stats("who_i");

        GetUserInfo($uId);

         $str = "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ [id$uId|—Ç–≤–æ—ë–º] –∞–∫–∫–∞—É–Ω—Ç–µ:\n\nüÜîID: {$GLOBALS["uInfo"]["id"]}\nüìé–î–æ–º–µ–Ω: {$GLOBALS["uInfo"]["domain"]}";
        if (isset($GLOBALS["uInfo"]["bdate"])) $str = $str."\nüöº–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {$GLOBALS["uInfo"]["bdate"]}";
        if (isset($GLOBALS["uInfo"]["followers_count"])) $str = $str."\nüöª–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {$GLOBALS["uInfo"]["followers_count"]}";
        if (isset($GLOBALS["uInfo"]["city"])) $str = $str."\nüèô–ì–æ—Ä–æ–¥: {$GLOBALS["uInfo"]["city"]}";
        if (isset($GLOBALS["uInfo"]["home_town"])) $str = $str."\nüåÉ–†–æ–¥–Ω–æ–π –≥–æ—Ä–æ–¥: {$GLOBALS["uInfo"]["home_town"]}";
        if (isset($GLOBALS["uInfo"]["country"])) $str = $str."\nüè≥‚Äçüåà–°—Ç—Ä–∞–Ω–∞: {$GLOBALS["uInfo"]["country"]}";
        if (isset($GLOBALS["uInfo"]["albums"])) $str = $str."\n\nüìö–ö–æ–ª-–≤–æ –∞–ª—å–±–æ–º–æ–≤: {$GLOBALS["uInfo"]["albums"]}";
        if (isset($GLOBALS["uInfo"]["videos"])) $str = $str."\nüé¨–ö–æ–ª-–≤–æ –≤–∏–¥–æ—Å–æ–≤: {$GLOBALS["uInfo"]["videos"]}";
        if (isset($GLOBALS["uInfo"]["audios"])) $str = $str."\nüéµ–ö–æ–ª-–≤–æ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π: {$GLOBALS["uInfo"]["audios"]}";
        if (isset($GLOBALS["uInfo"]["photos"])) $str = $str."\nüèñ–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ—á–µ–∫: {$GLOBALS["uInfo"]["photos"]}";
        if (isset($GLOBALS["uInfo"]["friends"])) $str = $str."\nüë•–ö–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π: {$GLOBALS["uInfo"]["friends"]}";
        if (isset($GLOBALS["uInfo"]["online_friends"])) $str = $str."\nüö∏–ö–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π –≤ –æ–Ω–ª–∞–π–Ω–µ: {$GLOBALS["uInfo"]["online_friends"]}";
        if (isset($GLOBALS["uInfo"]["mutual_friends"])) $str = $str."\nüë¨–ö–æ–ª-–≤–æ –æ–±—â–∏—Ö –¥—Ä—É–∑–µ–π: {$GLOBALS["uInfo"]["mutual_friends"]}";
        if (isset($GLOBALS["uInfo"]["groups"])) $str = $str."\nüõê–ö–æ–ª-–≤–æ –≥—Ä—É–ø–ø: {$GLOBALS["uInfo"]["groups"]}";
        if (isset($GLOBALS["uInfo"]["pages"])) $str = $str."\nüîñ–ö–æ–ª-–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {$GLOBALS["uInfo"]["pages"]}";
        
         SendMessage($user_id, $str);
         continue;
        } /* –ë–æ—Ç, –∫—Ç–æ —è */

        /* Function Zaceni() */
        if ($strSplit[0] == "–∑–∞—Ü–µ–Ω–∏") { Stats("zaceni");

            $str = explode(" ", $str);

            if ($str[1] == "" || $str[1] == " " || !isset($str[1])) { SendMessage($user_id, "‚ö† –¢—ã –∑–∞–±—ã–ª/–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–≥–æ –º–Ω–µ –Ω–∞–¥–æ –∑–∞—Ü–µ–Ω–∏—Ç—å)"); continue;}

         SendMessage($user_id, "üõÉ –ú–æ—è –æ—Ü–µ–Ω–∫–∞: ".random_int(0, 12)." –±–∞–ª–ª–æ–≤.");
         continue;
        } /* –ë–æ—Ç, –∑–∞—Ü–µ–Ω–∏ –∞–≤–∞—Ç–∞—Ä–∫—É */

        /* Function Infa() */
        if ($strSplit[0] == "–∏–Ω—Ñ–∞") { if (ABSvk($str)) continue; Stats("infa");

            $str2 = explode(" ", $str);

            if ($str2[1] == "" || $str2[1] == " " || !isset($str2[1])) { SendMessage($user_id, "‚ö† –¢—ã –∑–∞–±—ã–ª/–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)"); continue;}

            $str = mb_ereg_replace("–∏–Ω—Ñ–∞", "", $str);
            $str = str_replace("?", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

         SendMessage($user_id, "‚öõ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å \"{$str}\": ".random_int(0, 130)."%");
         continue;
        } /* –ë–æ—Ç, –∏–Ω—Ñ–∞ –∑–∞–≤—Ç—Ä–∞ –∫–æ–Ω–µ—Ü —Å–≤–µ—Ç–∞ */

        /* function Cmd() */
        if (stristr($str, 'cmd') != FALSE || stristr($str, '–∫–º–¥') != FALSE || stristr($str, 'help') != FALSE || stristr($str, '–ø–æ–º–æ—â—å') != FALSE || stristr($str, '–∫–æ–º–∞–Ω–¥') != FALSE || $strSplit[0] == '–Ω–∞—á–∞—Ç—å') { Stats("help");

            $str = "üìú –°–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —è –º–æ–≥—É:\n\nüìÑ https://vk.com/topic-166188343_40003425";

            SendMessage($user_id, $str);
            continue;
        } /* –ë–æ—Ç, –∫–æ–º–∞–Ω–¥—ã */

        /* function WhenCreated() */
        if ($strSplit[0] == "–∫—Ä–µ–∞—Ç–µ–¥") { Stats("created");

            if (isset($strSplit[1])) $uId = $strSplit[1];

          if (!ctype_digit(preg_replace("/.+id/", "", $uId))) { $uId = preg_replace("/.+com\//", "", $uId);  GetUserId($uId);
            
             if (isset($GLOBALS["id_as_screen_name"]["type"]) && $GLOBALS["id_as_screen_name"]["type"] == "group") { SendMessage($user_id, "‚ö† –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –≥—Ä—É–ø–ø—ã :/"); continue; }
             else if ($GLOBALS["id_as_screen_name"]["type"] == "user") $uId = $GLOBALS["id_as_screen_name"]["object_id"];
             else { SendMessage($user_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."); continue; }
          } else $uId = preg_replace("/.+id/", "", $uId);

            $html_code = file_get_contents("https://vk.com/foaf.php?id={$uId}");
            $Data = explode("\n", $html_code);

            foreach ($Data as $index => $elem) {
    
                if (strpos($Data[$index], "<ya:created dc:date=") !== false) {
        
                    $created = $Data[$index];
                    break;
                }
            }

            if (!isset($created)) { SendMessage($user_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."); continue; }

            $created = mb_ereg_replace("    <ya:created dc:date=\"", "", $created);
            $created = mb_ereg_replace("\"/>", "", $created);
            $created = mb_ereg_replace("T", " ", $created);
            $created = preg_replace("/\+.+/", "", $created);
            $created = trim($created, " \t\n\r\0\x0B");

            $today = time();
            $moon = strtotime($created);
            $moon2 = date("H:i:s d.m.20y", strtotime($created));
            
            SendMessage($user_id, "üîô [id{$uId}|–°—Ç—Ä–∞–Ω–∏—Ü–∞] –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ ".floor(($today - $moon) / 86400)." –¥–Ω–µ–π –Ω–∞–∑–∞–¥.\nüìÜ –¢–æ—á–Ω–∞—è –¥–∞—Ç–∞: {$moon2}");
            continue;
        } /* –ë–æ—Ç, –∫—Ä–µ–∞—Ç–µ–¥ */

        /* function Translate() */
        if ($strSplit[0] == "–ø–µ—Ä–µ–≤–µ–¥–∏") { if (ABSvk($str)) continue; Stats("translate");

            $first_lang  = $strSplit[1];
            $second_lang = $strSplit[2];

            unset($strSplit[0]); unset($strSplit[1]); unset($strSplit[2]);
              
            $translate = gtranslate(implode(" ", $strSplit), $first_lang, $second_lang);

            if ($translate == "" || $translate == null || $translate == false) {

                SendMessage($user_id, "‚ö† –¢—ã –≤–≤–µ–ª/–∞ —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–æ —Ç—É—Ç: ( https://vk.com/topic-166188343_39868320 )");
                continue;
            } if (ABSvk($translate)) continue;

            SendMessage($user_id, $translate);
            continue;
        } /* –ë–æ—Ç, –ø–µ—Ä–µ–≤–µ–¥–∏ ru en –ü—Ä–∏–≤–µ—Ç –∫–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? */

        /* Function Translit() */
        if ($strSplit[0] == "—Ç—Ä–∞–Ω—Å–ª–∏—Ç") { if (!isset($strSplit[1])) { SendMessage($user_id, "üìõ –ü–æ—Å–ª–µ —Å–ª–æ–≤–∞ |—Ç—Ä–∞–Ω—Å–ª–∏—Ç| -> –ø–∏—à–µ—à—å —Ç–µ–∫—Å—Ç, —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏."); continue;} Stats("translit");
        if (ABSvk($str)) continue;

            $str = mb_ereg_replace("—Ç—Ä–∞–Ω—Å–ª–∏—Ç", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

            $rus_arr = "–ô –¶ –£ –ö –ï –ù –ì –® –© –ó –• –™ –§ –´ –í –ê –ü –† –û –õ –î –ñ –≠ –Ø –ß –° –ú –ò –¢ –¨ –ë –Æ –π —Ü —É –∫ –µ –Ω –≥ —à —â –∑ —Ö —ä —Ñ —ã –≤ –∞ –ø —Ä –æ –ª –¥ –∂ —ç —è —á —Å –º –∏ —Ç —å –± —é";
            $rus_arr = explode(" ", $rus_arr);
            $eng_arr = "Q W E R T Y U I O P [ ] A S D F G H J K L ; ' Z X C V B N M , . q w e r t y u i o p [ ] a s d f g h j k l ; ' z x c v b n m , .";
            $eng_arr = explode(" ", $eng_arr);
            if (ABSvk(str_replace($eng_arr, $rus_arr, $str))) continue;

            SendMessage($user_id, str_replace($eng_arr, $rus_arr, $str));
            continue;
        } /* –ë–æ—Ç, —Ç—Ä–∞–Ω—Å–ª–∏—Ç ghbdtn */

        /* Function WriteTranslitom() */
        if ($strSplit[0] == "–Ω–∞–ø–∏—à–∏" && $strSplit[1] == "—Ç—Ä–∞–Ω—Å–ª–∏—Ç–æ–º") { if (!isset($strSplit[1])) { SendMessage($user_id, "üìõ –ü–æ—Å–ª–µ —Å–ª–æ–≤–∞ |—Ç—Ä–∞–Ω—Å–ª–∏—Ç| -> –ø–∏—à–µ—à—å —Ç–µ–∫—Å—Ç, —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏."); continue;} Stats("write_translit");
        if (ABSvk($str)) continue;

            $str = mb_ereg_replace("–Ω–∞–ø–∏—à–∏", "", $str);
            $str = mb_ereg_replace("—Ç—Ä–∞–Ω—Å–ª–∏—Ç–æ–º", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");
       
            $rus = array('–ê','–ë','–í','–ì','–î','–ï','–Å','–ñ','–ó','–ò','–ô','–ö','–õ','–ú','–ù','–û','–ü','–†','–°','–¢','–£','–§','–•','–¶','–ß','–®','–©','–™','–´','–¨','–≠','–Æ','–Ø','–∞','–±','–≤','–≥','–¥','–µ','—ë','–∂','–∑','–∏','–π','–∫','–ª','–º','–Ω','–æ','–ø','—Ä','—Å','—Ç','—É','—Ñ','—Ö','—Ü','—á','—à','—â','—ä','—ã','—å','—ç','—é','—è',' ');
            $lat = array('a','b','v','g','d','e','e','gh','z','i','y','k','l','m','n','o','p','r','s','t','u','f','h','c','ch','sh','sch','y','y','y','e','yu','ya','a','b','v','g','d','e','e','gh','z','i','y','k','l','m','n','o','p','r','s','t','u','f','h','c','ch','sh','sch','y','y','y','e','yu','ya',' ');
       
            if (ABSvk(str_replace($rus, $lat, $str))) continue;
            SendMessage($user_id, str_replace($rus, $lat, $str));
            continue;
        } /* –ë–æ—Ç, –Ω–∞–ø–∏—à–∏ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–æ–º –ü—Ä–∏–≤–µ—Ç */

        /* Function Weather() */
        if ($strSplit[0] == "–ø–æ–≥–æ–¥–∞") { Stats("weather");

            if (!isset($strSplit[1]) || $strSplit[1] == "" || $strSplit[1] == " ") { SendMessage($user_id, "‚ö† –¢—ã –Ω–µ —É–∫–∞–∑–∞–ª/a –ì–æ—Ä–æ–¥/–°—Ç—Ä–∞–Ω—É. –£–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞–¥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.\n–ü—Ä–∏–º–µ—Ä: –ú–µ–≥–∞ –ø–æ–≥–æ–¥–∞ Kiev"); continue; }

            $str = mb_ereg_replace("–ø–æ–≥–æ–¥–∞", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");
            $weatherAppId = "#APP_ID#";

            $params = array('appid'            => $weatherAppId,
                            'mode'             => "json",
                            'lang'             => "ru",
                            'units'            => "metric",
                            'cnt'              => "20",
                            'q'                => "{$str}");
            $params = http_build_query($params);
            $query = file_get_contents('http://api.openweathermap.org/data/2.5/forecast?'.$params);
            $result = json_decode($query, true);

            if ($result["cod"] == "404") { SendMessage($user_id, "–°—Ç—Ä–∞–Ω–∞/–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω."); continue; }

            $weather = array();

            foreach ($result["list"] as $index => $elem) {

                $d = explode(" ", $elem["dt_txt"]);

                if ($d[1][0] != "1" || $d[1][1] != "8") continue;

                array_push($weather, "üìÖ –î–∞—Ç–∞: {$elem["dt_txt"]}\nüåÉ –ì–æ—Ä–æ–¥: {$result["city"]["name"]}\nüè≥‚Äçüåà –°—Ç—Ä–∞–Ω–∞: {$result["city"]["country"]}\nüë• –ù–∞—Å–µ–ª–µ–Ω–∏–µ: ".(isset($result["city"]["population"]) ? $result["city"]["population"] : "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")."\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ".floor($elem["main"]["temp"])." ¬∞–°\n‚ô® –ê—Ç–º.–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É—Ä. –º–æ—Ä—è: ".floor($elem["main"]["sea_level"])." hpa\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {$elem["main"]["humidity"]}%\nüìú –û–ø–∏—Å–∞–Ω–∏–µ: {$elem["weather"][0]["description"]}\n‚òÅ –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {$elem["clouds"]["all"]}%\nüå™ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {$elem["wind"]["speed"]} –º/—Å");
            }

            $weather = implode("\n\n--------------\n\n", $weather);

         SendMessage($user_id, $weather);
         continue;
        } /* –ë–æ—Ç, –ø–æ–≥–æ–¥–∞ Kiev */

        /* Function ZNP() */
        if ($strSplit[0] == "–∑–Ω–ø") { Stats("znp");

            $str = mb_ereg_replace("–∑–Ω–ø", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

            preg_match_all('/./us', $str, $ar);
            $str =  join('', array_reverse($ar[0]));

        if (ABSvk($str)) continue;
        SendMessage($user_id, "üîõ $str");
         continue;
        } /* –ë–æ—Ç, –∑–Ω–ø —Å–ø–µ–ª –ª–µ–ø—Å */

    /* Premium-Area */

        if (CheckPremium($uId)) {

        /* Function Certificate() */
        if ($strSplit[0] == "—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç") { Stats("certificate");
            
            $str = preg_replace("/—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç/", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

            if (mb_strlen($str,'UTF-8') >= 150) { SendMessage($user_id, "‚ùå –û–±—ä—ë–º —Ç–µ–∫—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 150 —Å–∏–º–≤–æ–ª–æ–≤."); continue; }

            $sp = GetPhoto(CreateImage($uId, $str, "c"), $user_id);

         SendMessage($user_id, "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è [id$uId|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:", "photo", [$sp[0], $sp[1]]);
         continue;
        } /* –ë–æ—Ç, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç text */

        /* Function Quote() */
        if ($strSplit[0] == "—Ü–∏—Ç–∞—Ç–∞") { Stats("quotes");
            
            $str = preg_replace("/—Ü–∏—Ç–∞—Ç–∞/", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

            if (mb_strlen($str,'UTF-8') >= 200) { SendMessage($user_id, "‚ùå –û–±—ä—ë–º —Ç–µ–∫—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 200 —Å–∏–º–≤–æ–ª–æ–≤."); continue; }

            $sp = GetPhoto(CreateImage($uId, $str, "q"), $user_id);

         SendMessage($user_id, "–¶–∏—Ç–∞—Ç–∞ –¥–ª—è [id$uId|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:", "photo", [$sp[0], $sp[1]]);
         continue;
        } /* –ë–æ—Ç, —Ü–∏—Ç–∞—Ç–∞ text */

        /* Function SetAccost() */
        if ($strSplit[0] == "/setaccost") { Stats("setaccost");
            
            $str = preg_replace("/\/setaccost/", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

            if ($str == "" || $str == " " || $str == null) { SendMessage($user_id, "‚ùå –û–±—Ä–∞—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å —Ö–æ—Ç—è –±—ã 1 —Å–∏–º–≤–æ–ª!"); continue; }

            $prem[$uId]["accost"] = $str;
            file_put_contents("json/premium_list.json", json_encode($prem));

         SendMessage($user_id, "‚úÖ –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ \"$str\" -> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");
         continue;
        } /* –ë–æ—Ç, /setaccost –≤–∞—Å—è–Ω */

    }
    /* Premium-Area */

        /* Function RepForUsers() */
        if ($strSplit[0] == "/rep" || $strSplit[0] == "/report") { Stats("report");

            $str = preg_replace("/\/rep/", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");

         SendMessage($user_id, "üìÆ –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –¥–∞–Ω –æ—Ç–≤–µ—Ç - —Ç—ã –±—É–¥–µ—à—å –æ–± —ç—Ç–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω/–∞.");
         SendMessage(2000000003, "üì£ –í–æ–ø—Ä–æ—Å –æ—Ç [id$uId|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] [$uId] –≤ –±–µ—Å–µ–¥–µ: [$user_id]\n\n-> $str");
         continue;
        } /* –ë–æ—Ç, /rep –¢–µ—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ä–µ–ø–æ—Ä—Ç */

        /* Function RepForModerators() */
        if ($strSplit[0] == "!rep") {

            $str = preg_replace("/!rep/", "", $str);
            $str = trim($str, " \t\n\r\0\x0B");
            $str = explode(" ", $str);
            $rep_dialog = $str[0];
            $rep_user   = $str[1];
            unset($str[0]); unset($str[1]);
            $str = implode(" ", $str);

         SendMessage($rep_dialog, "üõÇ –û—Ç–≤–µ—Ç —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ [id$rep_user|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é]:\n\n-> $str");
         SendMessage(2000000003, "‚úÖ –û—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.");
         continue;
        } /* –ë–æ—Ç, !rep 1 245855787 –°–∞–º –∫–∞–∑–µ–ª */

            /* Admin –ö–æ–º–∞–Ω–¥—ã */

            if ($uId == "245855787") {

                /* function Shkila() */
                if ($strSplit[0] == "—à–∫–∏–ª–∞") {
        
                    $shkila = mb_ereg_replace("–º–µ–≥–∞ —à–∫–∏–ª–∞", "", $GLOBALS["msg_treatment"][$index]["object"]["text"]);
                    $shkila = trim($shkila, " \t\x0B");
        
                    $shkila = explode("!_", $shkila);
        
                    $fp = fopen("txt/answer_databse.txt","a");  
                    fwrite($fp, "\r\n".$shkila[0]."\\".$shkila[1]."\\0");  
                    fclose($fp);
        
                    SendMessage($user_id, "–í–∞—à–∞ –∑–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑—É –æ—Ç–≤–µ—Ç–æ–≤.\n\n–í–æ–ø—Ä–æ—Å: {$shkila[0]}\n–û—Ç–≤–µ—Ç: {$shkila[1]}");
                    continue;
                } /* –ë–æ—Ç, —à–∫–∏–ª–∞ test!_Test!!!! */

                /* function GetStats() */
                if ($strSplit[0] == "!stats") {

                    $stats = json_decode(file_get_contents("json/stats.json"), true);

                    $_stats = array("- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ -\n");

                    foreach ($stats as $index => $elem) {

                        $_var = $index.": ".$elem;
                        array_push($_stats , $_var);
                    }

                    $_stats = implode("\n", $_stats);
        
                    SendMessage($user_id, $_stats);
                    continue;
                } /* –ë–æ—Ç, !stats */

                /* function prem() */
                if ($strSplit[0] == "!premium") {

                    $str = preg_replace("/!premium/", "", $str);
                    $str = trim($str, " \t\x0B");
                    $str = explode(" ", $str);

                    SetPremium($str[1], $str[0], (isset($str[2]) == true) ? $str[2] : null);
                    continue;
                } /* –ë–æ—Ç, !premium status id date*/

                /* function prem() */
            } 

            if ($uId == "245855787" || $uId == "141807531") {
                if ($strSplit[0] == "!fc_set_info") {

                    $fcinfo = $GLOBALS["msg_treatment"][$index]["object"]["text"];
                    $fcinfo = str_replace("–º–µ–≥–∞", "", $fcinfo);
                    $fcinfo = str_replace("–ú–µ–≥–∞", "", $fcinfo);
                    $fcinfo = preg_replace("/!fc_set_info/i", "", $fcinfo);
                    $fcinfo = trim($fcinfo, " \t\n\r\0\x0B");

                    // $str = explode("/", $fcinfo);

                    if (strripos($fcinfo, "–ú–µ–≥–∞") === FALSE && strripos($fcinfo, "!fc_set_info") === FALSE) {

                    $fc_info_arr = json_decode(file_get_contents("../oblojki/json/fc_info.json"), true);

                    array_push($fc_info_arr, $fcinfo);

                    file_put_contents("../oblojki/json/fc_info.json", json_encode($fc_info_arr));
                    SendMessage($user_id, "‚úÖ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –æ–±–ª–æ–∂–∫–µ - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
                    continue;
                    } else {
                        SendMessage($user_id, "‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
                        continue;
                    }
                } /* –ë–æ—Ç, !fc_set_info */
                if ($strSplit[0] == "!fc_del_info") {

                    $fcinfo = $GLOBALS["msg_treatment"][$index]["object"]["text"];
                    $fcinfo = str_replace("–º–µ–≥–∞", "", $fcinfo);
                    $fcinfo = str_replace("–ú–µ–≥–∞", "", $fcinfo);
                    $fcinfo = preg_replace("/!fc_del_info/i", "", $fcinfo);
                    $fcinfo = trim($fcinfo, " \t\n\r\0\x0B");

                    if (strripos($fcinfo, "–ú–µ–≥–∞") === FALSE && strripos($fcinfo, "!fc_del_info") === FALSE) {

                    $fc_info_arr = json_decode(file_get_contents("../oblojki/json/fc_info.json"), true);

                    unset($fc_info_arr[$fcinfo]);

                    $fc_info_arr = array_values($fc_info_arr);

                    file_put_contents("../oblojki/json/fc_info.json", json_encode($fc_info_arr));
                    SendMessage($user_id, "‚úÖ –¢–µ–∫—Å—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º : $fcinfo: - —É–¥–∞–ª—ë–Ω.");
                    continue;
                    } else {
                        SendMessage($user_id, "‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
                        continue;
                    }
                } /* –ë–æ—Ç, !fc_del_info */
                if ($strSplit[0] == "!fc_list_info") {

                    $fc_info_arr = json_decode(file_get_contents("../oblojki/json/fc_info.json"), true);
                    $fc_info_arrNew = array();

                    foreach($fc_info_arr as $item => $value) {
                        $fc_info_arrNew[$item] = "[$item] => $value";
                    }

                    $fian = implode("\n", $fc_info_arrNew);
                    if (count($fc_info_arrNew)-1 < 0) $fian = "‚ùå –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç! –ë—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.";

                    SendMessage($user_id, "‚úÖ –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤ –∏ –∏–Ω–¥–µ–∫—Å–æ–≤: [index] => text\n\n$fian");
                    continue;
                } /* –ë–æ—Ç, !fc_list_info */
              }
              
        /* Function Or() */
        if (stristr($str, '–∏–ª–∏') != FALSE) { if (ABSvk($str)) continue; Stats("or");

            $str = str_replace("?", "", $str);
            $str = explode("–∏–ª–∏", $str);
    
             $rnd = random_int(0, 1);
             $answer_arr = ["–Ø –¥—É–º–∞—é, —á—Ç–æ –ª—É—á—à–µ: ", "–ü—É—Å—Ç—å –±—É–¥–µ—Ç: ", "–ù–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ: ", "–Ø –±—ã –≤—ã–±—Ä–∞–ª: ", "–ú–æ–π –æ—Ç–≤–µ—Ç: "];
             $rnd2 = random_int(0, 4);
    
             if ($rnd == 0) SendMessage($user_id, $answer_arr[$rnd2].$str[0]);
             else SendMessage($user_id, $answer_arr[$rnd2].$str[1]);
             continue;
        } /* –ë–æ—Ç, $txt1 –∏–ª–∏ $txt2 */

         /* Function Monetka() */
        if ($strSplit[0] == "–º–æ–Ω–µ—Ç–∫–∞") { Stats("monetka");
    
             $monetka = round(random_int(0, 1));
             $monetka = ($monetka == 0) ? "‚è∫ –†–µ—à–∫–∞" : "ü¶Ö –û—Ä—ë–ª";

             SendMessage($user_id, $monetka);
             continue;
        } /* –ë–æ—Ç, –º–æ–Ω–µ—Ç–∫–∞ */

        /* Function Answer() */
        $answers = file_get_contents("txt/answer_databse.txt");
        $answers = explode("\\0", $answers);
 
        $variants = array();
        
        foreach($answers as $index => $elem) { // –±–µ—Ä–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
            
            $var_count = 0;
            $_answ = explode("\\", mb_strtolower($elem)); // -> —Ä–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Ñ–∞–π–ª–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å/–æ—Ç–≤–µ—Ç
            
             foreach($strSplit as $index2 => $elem2) { // $strSplit -> —Å–ª–æ–≤–∞
            
            if (strripos($_answ[0], str_replace("?", "", $strSplit[$index2])) !== FALSE) { // -> –µ—Å–ª–∏ –≤ –≤–æ–ø—Ä–æ—Å–µ —Ñ–∞–π–ª–∞ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å —é–∑–µ—Ä–∞
       
             $variants[$index] = array($index, $var_count+=1);
             }
             /* –ï—Å–ª–∏ —Å–ª–æ–≤–æ N –≤ –≤–æ–≤–ø—Ä–æ—Å–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ª–æ–≤–µ N —Å—Ç—Ä–æ–∫–∏ –±–∞–∑—ã -> –î–æ–±–∞–≤–ª—è–µ–º index —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–ª-–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ */
          }
        }
        
        $arMax = [
           // 'max' => 0,
           // 'item' => null,
            'item_idx' => -1
           ];          
       $tmpMax = 0;
       foreach( $variants as $k => $value ){
           if($value[1] > $tmpMax){
               $tmpMax = $value[1];
               // $arMax['max'] = $tmpMax;
               // $arMax['item'] = &$variants[$k];
               $arMax['item_idx'] = $k;
           }
       }
       
       if ($arMax['item_idx'] == -1) { $rnd = random_int(0, count($answers)-1); SendMessage($user_id, "üí¨ ".explode("\\", preg_replace("/\\0/", "", $answers[$rnd]))[1]."*"); continue; }
       /* –†–∞–Ω–¥–æ–º–Ω—ã–π –æ—Ç–≤–µ—Ç, –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–æ—Å—å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ */

       $resAnswer = explode("\\", preg_replace("/\\0/", "", $answers[$arMax['item_idx']]))[1];

       SendMessage($user_id, "üí¨ $resAnswer");
       continue;
       /* –û—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å */
    }
} /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */

/*------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------–ó–ê–ü–£–°–ö –§–£–ù–ö–¶–ò–ô------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------*/

if (isset($_GET['other'])) {

    SetStatus();
    usleep(500000);
    SetOnline();
    usleep(500000);
    checkRequestAdd();
    usleep(500000);
    checkRequestDeleted();
    usleep(500000);
    CheckNoRepeats();
    usleep(500000);
    ClearBlockTxt();
    usleep(500000);
    CheckFastMessages();
    usleep(500000);
    CheckPremiumDate();
    usleep(500000);
    ClearImages(array("quotes", "certificates"));

} /* check_request */

if (isset($_GET['check_msg'])) {

    LongPollServer();
    usleep(500000);
    LongPollHistory();
    usleep(500000);
    print_r($GLOBALS["new_ts"]);
    if (count($GLOBALS["msg_treatment"]) < 1) {file_put_contents("txt/ts_bot.txt", $GLOBALS["new_ts"]); return;}
    MessageTreatment();

    print_r("<pre>");
    print_r($GLOBALS["msg_treatment"]);
    print_r("</pre>");

    // print_r($GLOBALS["new_ts"]);
    file_put_contents("txt/ts_bot.txt", $GLOBALS["new_ts"]);

} /* check_msg */

if (isset($_GET['send_msg'])) {

    Send();

} /* send_msg */

/* mb_strtolower() -> –ø–µ—Ä–µ–≤–æ–¥ –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä */
/* mb_strtoupper("–ø—Ä–∏–≤–µ—Ç!"); -> –ü–†–ò–í–ï–¢! */
/* random_int(0, 4); -> 0..4 */
/* explode(" ", $str); -> —Å—Ç—Ä–æ–∫–∞ –≤ –º–∞—Å—Å–∏–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã */
/* stristr($str, '–∏–ª–∏') != FALSE -> –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ */
/* mb_ereg_replace("–±–æ—Ç,", "", $str); -> —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞ */
/* str_replace("?", "", $str); -> —É–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ */
/* trim($str, " \t\n\r\0\x0B"); -> —É–¥–∞–ª—è–µ–º–≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–µ " ", \n –∏ —Ç.–¥. –∏–∑ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏ */
/* mb_strlen("text",'UTF-8'); -> 4 */
/* ctype_digit("—Ç–µ–∫—Å—Ç5"); [false] <- —Å—Ç—Ä–æ–∫–∞ —Ç–æ–ª—å–∫–æ –∏–∑ —á–∏—Å–µ–ª/–Ω–µ—Ç */
/* preg_replace("/.+id/", "", $var); <- —Å—å—ä–µ–¥–∞–µ–º –≤—Å–µ, —á—Ç–æ –∏–¥–µ—Ç –≤ —Å—Ç—Ä–æ–∫–µ –¥–æ "id" */
/* mb_strstr('abCDef','CD', true); if (true) -> "ab" | if (false) -> "ef" */

?>
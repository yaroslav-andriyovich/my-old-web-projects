// - - - - - - - MEGA GROUP - - - - - - -

const { VK } = require('vk-io');
const FS = require('fs');
const needle = require('needle');
const cheerio = require('cheerio');
const querystring = require('querystring');
var CronJob = require('cron').CronJob;

const GROUP = new VK({
	token: '#TOKEN#'
}); // –ê–≤—Ç–æ—Ä–∏–∑–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—É

const CONFIG_FILE = "./jsons/bot_config.json"; // –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
let config = JSON.parse(FS.readFileSync(CONFIG_FILE, 'utf8'));

const ANSWER_DB_FILE = "answer_database2.txt"; // –ë–∞–∑–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å\–æ—Ç–≤–µ—Ç
let AnswerDB = FS.readFileSync(ANSWER_DB_FILE, 'utf8').split("\n");

if (!AnswerDB)
{
    console.debug("Error: AnswerDB is incorrect!"); // –ï—Å–ª–∏ –Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –∏–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞
    return;
}

const PREFIX = "–º–µ–≥–∞"; // –ö–ª—é—á–µ–≤–æ–µ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å
const PREFIX_REGEXP_START = new RegExp(`^${PREFIX}?.\\s`, "i"); // –í—ã—Ä–µ–∑–∞—Ç—å —Å–ª–æ–≤–æ –≤ –Ω–∞—á–∞–ª–µ
const START_EMOJI = "üí¨ ";

// - - - - - - - P R O C E D U R E S - - - - - - -

// –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
function ClearText(text)
{
    return text.toLowerCase().replace(/[^a-zA-Z +-0-9–∞-—è–ê-–Ø—ñ—ó—î–Ü–á–Ñ]/ig, '').trim();
}

// –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç min –¥–æ max –≤–∫–ª—é—á–∏—Ç—å–µ–ª—å–Ω–æ
function Random(min, max)
{
    return Math.round(Math.random() * (max - min) + min);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫—Ä–∞—Å–∏–≤–æ–º –≤–∏–¥–µ –ø–æ –º–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
function GetLocalTime(europeCity, time = undefined)
{
    if (!time)
        time = new Date();
    
    time = time.toLocaleString('ru-RU',
    {
        timeZone: `Europe/${europeCity}`
    }).split(",");

    return `üìÖ ${time[0]} | ‚åö ${time[1]}`;
}

// –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function OnNewMessage(context)
{
    // let TIMER = new Date().getTime();
    // –ò–≥–Ω–æ—Ä–∏–º –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä –Ω–µ —é–∑–µ—Ä –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ
    if (context.senderType != "user" || !context.text)
        return;

    // console.debug(context);
    // console.debug(`[${context.senderId}]: ${context.text}`);
    
    // –ò–≥–Ω–æ—Ä–∏–º –µ—Å–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if (!(PREFIX_REGEXP_START.test(context.text)))
        return;

    let text = context.text.replace(PREFIX_REGEXP_START, "").replace(/\?/g, "").trim();

    // –ò–≥–Ω–æ—Ä–∏–º –µ—Å–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π
    if (!text)
        return;

    // if (!(await GROUP.api.groups.isMember( { user_id: context.senderId, group_id: 166188343 } ))) // –ò–≥–Ω–æ—Ä –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–µ
    //     return;

    // –ü–µ—Ä–µ–±–æ—Ä –∫–æ–º–º–∞–Ω–¥
    for(cmd in commands)
    {
        // –ò—â–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∫–æ–º–∞–Ω–¥ –≤ —Ç–µ–∫—Å—Ç–µ
        if (await commands[cmd].findKey(text, context))
            return ++config.sent;
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã, –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ –ë–î
    let req = await RequestForText(text);
    // console.debug(`Question(User): ${text}`);
    // console.debug(`Answer: ${req}`);
    context.reply(req);
    // context.reply(req + "\n\n–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: " + (new Date().getTime() - TIMER).toString() + "–º—Å.");
    ++config.sent;
}

async function RequestForText(text) // –ò—â–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ –∏ –≤–æ–ø—Ä–æ—Å–∞—Ö –∏–∑ –ë–î users.sort((a, b) => a.firstname.localeCompare(b.firstname))
{
    let answers = []; // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    text = ClearText(text);  // –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    let splitedText = text.split(" "); // –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –º–∞—Å—Å–∏–≤ —Å–ª–æ–≤

    AnswerDB.forEach((str, index) => // –ü–µ—Ä–µ–±–æ—Ä —Å—Ç—Ä–æ–∫ –∏–∑ –±–∞–∑—ã
    {
        let coincidencesCount = 0; // –ö–æ–ª-–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Ç–µ–∫. —Å—Ç—Ä–æ–∫–µ
        str = str.split("\\")[0]; // –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤

        splitedText.forEach(word => // –ü–µ—Ä–µ–±–æ—Ä –≤–æ–ø—Ä–æ—Å–∞ —é–∑–µ—Ä–∞
        {
            if (str.includes(word)) // –ï—Å–ª–∏ —Å–ª–æ–≤–æ –µ—Å—Ç—å –≤ –≤–æ–ø—Ä–æ—Å–µ –±–∞–∑—ã
                ++coincidencesCount; // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        });        

        if ((coincidencesCount > 0) && splitedText.length == str.split(" ").length) // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å –ø–æ –∫–æ–ª-–≤—É —Å–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö
                ++coincidencesCount;

        if (coincidencesCount > 0) // –í–Ω–æ—Å–∏–º —Å—Ç—Ä–æ–∫—É –≤ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
            answers.push([coincidencesCount, index]);
    });

    let max = 0; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π

    answers.forEach(count => // –ü–µ—Ä–µ–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
    {
        if (count[0] > max) // –ù–∞—Ö–æ–¥–∏–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∫–æ–ª-–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        {
            max = count[0]; // –ö–æ–ª-–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
            answerIndex = count[1]; // –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ —Å –æ—Ç–≤–µ—Ç–æ–º –∏–∑ –±–∞–∑—ã
        }
    });

    answers = answers.filter(a => a[0] >= max); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º

    // console.log("Max cincidences count: " + max);
    // console.log("Answers count: " + answers.length);

    let answer;

    if (!max) // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ
        answer = GetRandomAnswer(AnswerDB).split("\\")[1]; // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –±–∞–∑—ã
    else
    {
        answer = AnswerDB[GetRandomAnswer(answers)[1]];
        // console.debug("Question(DB): " + answer.split("\\")[0]);
        answer = answer.split("\\")[1].trim(); // –ë–µ—Ä—ë–º –æ—Ç–≤–µ—Ç –∏–∑ —Å—Ç—Ä–æ–∫–∏ –±–∞–∑—ã
    }

    answer = answer[0].toUpperCase() + answer.slice(1);

    if (!(/[.!?()]$/i.test(answer)))
        answer += ".";
    
    return answer;
}

function GetRandomAnswer(arr) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞
{
    return arr[Random(0, arr.length - 1)];
}

async function GetUserInfo(userID) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ –∞–π–¥–∏
{
    return GROUP.api.users.get( { fields:'first_name,last_name,id,city,bdate,counters,domain,followers_count,photo_id', user_ids: userID } );
}

async function GetUserID(damain) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–π–¥–∏ —é–∑–µ—Ä–∞ –ø–æ –¥–æ–º–µ–Ω—É
{
    return GROUP.api.utils.resolveScreenName( { screen_name: damain });
}

async function GetPhotosInAlbum(album_url, count = undefined)
{
    album_url = album_url.split("_");

    return (await GROUP.api.photos.get(
        {
            owner_id: album_url[0],
            album_id: album_url[1],
            count: count || 500,
            access_token: "#TOKEN_MEGA_PAGE_NO_GROUP#" // mega user
        }
    )).items;
}

// - - - - - - - C O M M A N D S - - - - - - -

let commands = []; // –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
let Command = function (key, func) // –ü—Ä–æ—Ç–æ—Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã
{
    this.key = key; // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
    this.execute = func; // –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞
    this.findKey = async (text, context) => // –ü–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
    {
        if (this.key.test(text)) // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—Å—Ç–µ
        {
            await this.execute(text, context); // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
            return true; // –ö–æ–º–∞–Ω–¥–∞ –Ω–∞–π–¥–µ–Ω–∞
        }
        
        return false; // –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    };
    this.removeKey = (text) => // –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
    {
        return text.replace(this.key, "").trim();
    };

    commands.push(this); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–Ω–µ—Å–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
};

new Command(/^(–∫–æ–º–∞–Ω–¥—ã|help|–ø–æ–º–æ—â—å|—á—Ç–æ\s—Ç—ã\s(—É–º–µ–µ—à—å|–º–æ–∂–µ—à—å).?)/i, async function(text, context) // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
{
    context.reply("üìú –°–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —è –º–æ–≥—É\nüìÑ https://vk.com/topic-166188343_40003425");
});

new Command(/^—Å–∫–∞–∂–∏/i, async function(text, context) // –°–∫–∞–∂–∏ *—Ç–µ–∫—Å—Ç*
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        let answers = [
            "–¢—ã –∑–∞–±—ã–ª/–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–≥–æ –º–Ω–µ –Ω–∞–¥–æ —Å–∫–∞–∑–∞—Ç—å!",
            "–ß–µ–≥–æ —Å–∫–∞–∑–∞—Ç—å?",
            "–ú–Ω–µ –Ω–µ—á–µ–≥–æ —Å–∫–∞–∑–∞—Ç—å."
        ];
        context.reply(`‚ö† ${GetRandomAnswer(answers)}`);
        return;
    }
    context.send(START_EMOJI + text);
});

new Command(/^(–∑–∞|–æ)—Ü–µ–Ω–∏/i, async function(text, context) // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ —á–µ–≥–æ-–ª–∏–±–æ
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        let answers = [
            "–¢—ã –∑–∞–±—ã–ª/–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–≥–æ –º–Ω–µ –Ω–∞–¥–æ –∑–∞—Ü–µ–Ω–∏—Ç—å!",
            "–ß–µ–≥–æ –º–Ω–µ –∑–∞—Ü–µ–Ω–∏—Ç—å?",
            "–ú–Ω–µ –Ω–µ—á–µ–≥–æ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å."
        ];
        context.reply(`‚ö† ${GetRandomAnswer(answers)}`);
        return;
    }

    let answers = [
        "–ú–æ—è –æ—Ü–µ–Ω–∫–∞:",
        "–¢—è–Ω–µ—Ç –Ω–∞",
        "–ù–∞–≤–µ—Ä–Ω–æ–µ..",
        "–ü–æ—Å—Ç–∞–≤–ª—é –≤ —ç—Ç–æ—Ç —Ä–∞–∑"
    ];
    context.reply(`üõÉ ${GetRandomAnswer(answers)} ${Random(0, 12)} –±–∞–ª–ª–æ–≤.`);
});

new Command(/^–º–æ–Ω–µ—Ç–∫–∞/i, async function(text, context) // –†–µ—à–∫–∞ –∏–ª–∏ –û—Ä–µ–ª
{
    context.reply((Random(0, 1) == 0) ? "‚è∫ –†–µ—à–∫–∞" : "ü¶Ö –û—Ä—ë–ª");
});

new Command(/^—Ä–∞–Ω–¥–æ–º/i, async function(text, context) // –†–∞–Ω–¥–æ–º –æ—Ç min –¥–æ max
{
    text = text.match(/-?\d+/g);

    if (!(/\d+.+\d+/g.test(text)) || isNaN(text[0]) || isNaN(text[1]))
    {
        context.reply("‚ö† –í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞!\n–ü—Ä–∏–º–µ—Ä: –ú–µ–≥–∞, —Ä–∞–Ω–¥–æ–º 0 100 (0 - min, 100 - max)");
        return;
    }

    context.reply(`üé≤ ${(Random(parseInt(text[0]), parseInt(text[1])))}`);
});

new Command(/(–≤—Ä–µ–º(—è|–µ–Ω–∏)|–∫–æ—Ç–æ—Ä—ã–π\s—á–∞—Å)/i, async function(text, context) // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
{
    let moscow = GetLocalTime("Moscow");
    let kiev = GetLocalTime("Kiev");
    context.reply(`üá∫üá¶ –ö–∏—ó–≤: ${kiev}\nüá∑üá∫ –ú–æ—Å–∫–≤–∞: ${moscow}\n`);
});

async function GetCreatedDateForVKUser(id, context) // –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
{
    await needle.get(`https://vk.com/foaf.php?id=${id}`, function(error, res) 
    {
        if (error || res.statusCode != 200)
            return context.reply("‚ùå Parsing error. (Error or StatusCode)");

        let xml = res.body.split("\n");

        for (let str in xml)
        {
            if (xml[str].includes("<ya:created dc:date="))
            {
                let date_string = xml[str].match(/".+?"/)[0].replace(/"/g, "").trim();
                let date = new Date(date_string);
                
                context.reply(`üîô [id${id}|–°—Ç—Ä–∞–Ω–∏—Ü–∞] –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ ${Math.floor(((new Date().getTime() - date.getTime()) / 86400000)).toString()} –¥–Ω–µ–π –Ω–∞–∑–∞–¥.
                \n–¢–æ—á–Ω–∞—è –¥–∞—Ç–∞: ${GetLocalTime("Moscow", date)}`);
                return;
            }
        }

        return context.reply("‚ùå Parsing error. (Date not found)");
    });
}

new Command(/^(–∫—Ä–µ–∞—Ç–µ–¥|created)/i, async function(text, context) // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        await GetCreatedDateForVKUser(context.senderId, context);
        return;
    }

    let user = await GetUserID(text.replace(/.+com\//i, "").replace(/\s.*/i, "").trim());

    if (!user.type)
    {
        context.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return;
    }
    else if (user.type != "user")
    {
        context.reply("‚ö† –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –≥—Ä—É–ø–ø—ã :/");
        return;
    }
    
    await GetCreatedDateForVKUser(user.object_id, context);
});

new Command(/^(—Ç—Ä–∞–Ω—Å–ª–∏—Ç|translit)/i, async function(text, context) // –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ —Ç—Ä–∞–Ω—Å–ª–∏—Ç
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply("üìõ –ü–æ—Å–ª–µ —Å–ª–æ–≤–∞ |—Ç—Ä–∞–Ω—Å–ª–∏—Ç| -> –ø–∏—à–µ—à—å —Ç–µ–∫—Å—Ç, —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏.");
        return;
    }

    var ru = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', 
        '–µ': 'e', '—ë': 'e', '–∂': 'j', '–∑': 'z', '–∏': 'i', 
        '–∫': 'k', '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o', 
        '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', 
        '—Ñ': 'f', '—Ö': 'h', '—Ü': 'c', '—á': 'ch', '—à': 'sh', 
        '—â': 'shch', '—ã': 'y', '—ç': 'e', '—é': 'u', '—è': 'ya'
    }, n_str = [];
    
    text = text.replace(/[—ä—å]+/g, '').replace(/–π/g, 'i');
    
    for ( var i = 0; i < text.length; ++i )
    {
        n_str.push(
            ru[ text[i] ]
            || ru[ text[i].toLowerCase() ] == undefined && text[i]
            || ru[ text[i].toLowerCase() ].toUpperCase()
        );
    }
    
    text = n_str.join('');

    context.reply(START_EMOJI + text);
});

new Command(/^–∑–Ω–ø/i, async function(text, context) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply("‚ö† –¢—ã –∑–∞–±—ã–ª/–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–≥–æ –º–Ω–µ –Ω–∞–¥–æ –∑–∞–∫–∏–Ω—É—Ç—å –≤ —Ä–µ–≤–µ—Ä—Å!");
        return;
    }

    context.reply(START_EMOJI + text.split("").reverse().join(""));
});

new Command(/.+\s–∏–ª–∏\s.+/i, async function(text, context) // –í—ã–±–∏—Ä–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ –º–µ–∂–¥—É *–∏–ª–∏*
{
    let regexpI = /^\s?—è\s/ig;
    let regexpYOU = /^\s?—Ç—ã\s/ig;

    text = text.split("–∏–ª–∏");

    for (let t in text)
    {
        if (regexpYOU.test(text[t]))
            text[t] = text[t].replace(regexpYOU, "—è ");
        else if (regexpI.test(text[t]))
            text[t] = text[t].replace(regexpI, "—Ç—ã ");
    }

    let answers = ["–Ø –¥—É–º–∞—é, —á—Ç–æ –ª—É—á—à–µ", "–ü—É—Å—Ç—å –±—É–¥–µ—Ç", "–ù–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ", "–Ø –±—ã –≤—ã–±—Ä–∞–ª", "–ú–æ–π –æ—Ç–≤–µ—Ç"];

    context.reply(`‚öñ ${GetRandomAnswer(answers)}: ${GetRandomAnswer(text)}`);
});

new Command(/^–∫—Ç–æ/i, async function(text, context) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–µ—Å–µ–¥—ã –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø–æ–¥–∫–æ–º–º–∞–Ω–¥
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply(`‚ö† –ö—Ç–æ-—á—Ç–æ? –ì–¥–µ? –ö–æ–≥–¥–∞?!`);
        return;
    }
    
    if (/^—è.?$/i.test(text)) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–¥–∞—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å
    {
        let user = (await GetUserInfo(context.senderId))[0];
        let answer = `üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ [id${user.id}|—Ç–≤–æ—ë–º] –∞–∫–∫–∞—É–Ω—Ç–µ:\n\nüÜîID: ${user.id}\nüìé–î–æ–º–µ–Ω: ${user.domain}`;

        if (user.bdate) 
            answer += `\nüöº–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${user.bdate}`;
        if (user.followers_count) 
            answer += `\nüöª–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: ${user.followers_count}`;            
        if (user.city) 
            answer += `\nüèô–ì–æ—Ä–æ–¥: ${user.city.title}`;
        if (user.home_town) 
            answer += `\nüåÉ–†–æ–¥–Ω–æ–π –≥–æ—Ä–æ–¥: ${user.home_town}`;
        if (user.country) 
            answer += `\nüè≥‚Äçüåà–°—Ç—Ä–∞–Ω–∞: ${user.country}`;
        if (user.counters.albums) 
            answer += `\n\nüìö–ö–æ–ª-–≤–æ –∞–ª—å–±–æ–º–æ–≤: ${user.counters.albums}`;
        if (user.counters.videos) 
            answer += `\nüé¨–ö–æ–ª-–≤–æ –≤–∏–¥–æ—Å–æ–≤: ${user.counters.videos}`;
        if (user.counters.audios) 
            answer += `\nüéµ–ö–æ–ª-–≤–æ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π: ${user.counters.audios}`;
        if (user.counters.photos) 
            answer += `\nüèñ–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ—á–µ–∫: ${user.counters.photos}`;
        if (user.counters.friends) 
            answer += `\nüë•–ö–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π: ${user.counters.friends}`;
        if (user.counters.online_friends) 
            answer += `\nüö∏–ö–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π –≤ –æ–Ω–ª–∞–π–Ω–µ: ${user.counters.online_friends}`;
        if (user.counters.groups) 
            answer += `\nüõê–ö–æ–ª-–≤–æ –≥—Ä—É–ø–ø: ${user.counters.groups}`;
        if (user.counters.posts) 
            answer += `\nüÜï–ö–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤: ${user.counters.posts}`;
        if (user.counters.gifts) 
            answer += `\nüéÅ–ö–æ–ª-–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤: ${user.counters.gifts}`;

        context.reply(answer);
        return;
    }
    else if (/^—Ç—ã.?$/i.test(text)) // –ì–æ–≤–æ—Ä–∏—Ç —á—Ç–æ –æ–Ω –±–æ—Ç
    {
        context.reply("üåö –Ø –º–µ–≥–∞ –±–æ—Ç! –ü–æ–º–∏–º–æ —Ç–æ–≥–æ, —á—Ç–æ —è –º–æ–≥—É –æ–±—â–∞—Ç—å—Å—è –ø–æ—á—Ç–∏ –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ - —è —Ç–∞–∫–∂–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã!");
        return;
    }
    else if (/^(—Ç–µ–±—è\s(—Ä–æ–¥–∏–ª|—Å–æ–∑–¥–∞–ª|—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª)|(—Ç–≤–æ–π|—Ç–≤–æ–∏)\s(–æ—Ç–µ—Ü|–±–∞—Ç—è|–ø–∞–ø–∞|—Å–æ–∑–¥–∞—Ç–µ–ª—å|—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫|—Ä–æ–¥–∏—Ç–µ–ª)).?$/i.test(text)) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è
    {
        context.reply("üë§ –ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: [id245855787|Yaroslav Andreev]");
        return;
    }

    try // Try/Catch - –Ω—É–∂–µ–Ω –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±–æ—Ç—É –Ω–µ –≤—ã–¥–∞–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    {
        let chat_members = (await GROUP.api.messages.getConversationMembers( { peer_id: context.peerId })).profiles;

        let random_member = chat_members[Random(0, chat_members.length - 1)];
        
        let answers = [
            "–Ø –¥—É–º–∞—é —ç—Ç–æ",
            "–°—Ç–æ –ø—É–¥–æ–≤ —ç—Ç–æ",
            "–ö–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ",
            "–ö—Ç–æ –∂–µ —ç—Ç–æ? –≠—Ç–æ –∂–µ",
            "–ü—Ä–∏–∫–∏–Ω—å! –ü–æ—Ö–æ–¥—É —ç—Ç–æ",
        ];
        context.reply(`üëÅ‚Äçüó® ${GetRandomAnswer(answers)}: ${random_member.first_name} ${random_member.last_name} (https://vk.com/id${random_member.id})`);
    }
    catch
    {
        context.reply(`üöß –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ—Å–µ–¥—ã –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! –ü–æ—Ç–æ–º—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—Ç—å–µ –º–Ω–µ –∏—Ö.`);
    }
});

new Command(/^–∏–Ω—Ñ–∞/i, async function(text, context) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π —à–∞–Ω—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
{
    context.reply(`‚öõ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ${Random(0, 130)}%`);
});

new Command(/^(\[\id\\b+|.+])/i, async function(text, context) // –ì–æ–≤–æ—Ä–∏—Ç –¥–∞/–Ω–µ—Ç/–Ω–µ –∑–Ω–∞—é –ø—Ä–∏ –≤–æ–ø—Ä–æ—Å–µ "–ú–µ–≥–∞, @user *—Ç–µ–∫—Å—Ç*?"
{
    let answers = [
        "–î–∞ :D",
        "–ù–µ –∑–Ω–∞—é :(",
        "–ù–µ—Ç."
    ];

    context.reply(`üëª ${GetRandomAnswer(answers)}`);
});

new Command(/^–∫–æ–≥–¥–∞/i, async function(text, context) // –ì–æ–≤–æ—Ä–∏—Ç –∫–æ–≥–¥–∞ —Å–ª—É—á–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
{
    let rand = Math.random();
    let days = Random(1, (rand < 0.5) ? 50 : (rand >= 0.5 && rand <= 0.7) ? 250 : 500);
    let hours = Random(0, 23);
    let minutes = Random(0, 59);
    let seconds = Random(0, 59);
    let date = new Date();
    let new_date = GetLocalTime("Moscow", new Date((date.setDate(date.getDate() + days)))).split(" ");
    
    context.reply(`‚è≥ –°–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —á–µ—Ä–µ–∑ ${days} –¥–Ω–µ–π.
    \n–¢–æ—á–Ω–∞—è –¥–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${new_date[0]} ${new_date[1]} | ‚åö ${(hours <= 9) ? "0" + hours : hours}:${(minutes <= 9) ? "0" + minutes : minutes}:${(seconds <= 9) ? "0" + seconds : seconds} –ø–æ –ú–°–ö.`);
});

new Command(/^–ø–æ–≥–æ–¥–∞/i, async function(text, context) // –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≥–æ—Ä–æ–¥—É
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply(`‚ö† –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç—ã –í–∞—Å—è –ø–æ–≥–æ–¥—É —É–∑–Ω–∞–µ—à—å! –ü–æ—á–∏—Ç–∞–π —Ç—É—Ç –∫–∞–∫ –Ω–∞–¥–æ: https://vk.com/@megabot_club-pagoda`);
        return;
    }

    text = text.trim();
    
    let weather_request = querystring.stringify(
    { 
        appid: "#openweathermap_app_id#",
        mode: "json",
        lang: "ru",
        units: "metric",
        cnt: "20",
        q: text
    });

    await needle.get(`http://api.openweathermap.org/data/2.5/forecast?${weather_request}`, function(error, res) 
    {
        if (error || res.statusCode != 200 || res.body.cod != "200")
            return context.reply("‚ùå –°—Ç—Ä–∞–Ω–∞/–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.");

        let city = res.body.city;
        let city_info = `üåê –ì–æ—Ä–æ–¥: ${city.name}\nüö© –°—Ç—Ä–∞–Ω–∞: ${city.country}\nüåÑ –í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: ${GetLocalTime("Moscow", new Date(city.sunrise*1000))}\nüåÖ –ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: ${GetLocalTime("Moscow", new Date(city.sunset*1000))}`;

        let wlist = res.body.list;
        let other = "";

        wlist.forEach(o =>
        {
            if (o.dt_txt.split(" ")[1].startsWith(15))
            {
                other += `\n\nüìÖ –î–∞—Ç–∞: ${o.dt_txt}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${Math.floor(o.main.temp)} ¬∞–°\n‚ô® –ê—Ç–º.–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É—Ä. –º–æ—Ä—è: ${Math.floor(o.main.sea_level)} hpa\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${o.main.humidity}%\nüìú –û–ø–∏—Å–∞–Ω–∏–µ: ${o.weather[0].description}\n‚òÅ –û–±–ª–∞—á–Ω–æ—Å—Ç—å: ${o.clouds.all}%\nüå™ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${o.wind.speed} –º/—Å`;
            }
        });
        
        context.reply(`${city_info}\n${other}`);
    });
});

new Command(/^—Å—Ç–∞—Ç—É—Å/i, async function(text, context) // –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
{
    context.reply(`‚ôª –Ø –æ–±—Ä–∞–±–æ—Ç–∞–ª —É–∂–µ ${config.sent} —Å–æ–æ–±—â–µ–Ω–∏–π!`);
});

// - - - - - - - –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ç–æ  - - - - - - -

const PhotoElement = function(key, text, ids, count = undefined) // –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–∏—Å–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
{
    this.key = key; // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    this.text = text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
    this.ids = ids; // –ú–∞—Å—Å–∏–≤ –∞–π–¥–∏—à–Ω–∏–∫–æ–≤ –∞–ª—å–±–æ–º–æ–≤
    this.count = count;
};

let photo_elements = [ // –ú–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ-—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    new PhotoElement(/–ª–∏—Å/i, "ü¶ä –î–µ—Ä–∂–∏ –ª–∏—Å—è :3", ["-154332271_254183799", "-154332271_251104512"]),
    new PhotoElement(/–∫–æ(—Ç|—à–∫)/i, "üêà –î–µ—Ä–∂–∏ –∫–æ—Ç—é :3", ["-23300841_140078617", "-33621085_164135136", "-33621085_149514761"]),
    new PhotoElement(/—Å–æ–±–∞(–∫|—á)|–ø—Å–∞|–ø–µ—Å|–ø—ë—Å/i, "üê∂ –î–µ—Ä–∂–∏ –ø—ë—Å–µ–ª—è :3", ["-64071719_257962649", "-54147255_257371399", "-54147255_257322126"]),
    new PhotoElement(/–µ–Ω–æ—Ç/i, "ü¶ù –î–µ—Ä–∂–∏ –µ–Ω–æ—Ç–∏–∫–∞ :3", ["-156058801_249018370", "-29290939_177484881"]),
    new PhotoElement(/((—Ç–∞–Ω–∫)?—Ç–∞—Å—Ç–∏–∫|tanktastic)/i, "üì± –õ—é–±–∏—Ç–µ–ª—è–º —Ç–∞—Å—Ç–∏–∫–∞ –ø–æ—Å–≤—è—â–∞–µ—Ç—Å—è..", ["-56842466_227123664", "-56842466_218094633", "-50012518_170259816", "-56842466_189303835", "-56842466_178482029"])
];

new Command(/^—Ñ–æ—Ç–æ/i, async function(text, context) // –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply(`‚ö† –§–æ—Ç–æ –∫–æ–≥–æ?`);
        return;
    }

    let photo_element;

    for (let p in photo_elements) // –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —Ñ–æ—Ç–æ-—ç–ª–µ–º–µ–Ω—Ç–æ–≤
    {
        if (photo_elements[p].key.test(text)) // –ï—Å–ª–∏ —é–∑–µ—Ä —Ö–æ—á–µ—Ç –Ω–∞–π—Ç–∏ —Ñ–æ—Ç–æ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        {
            photo_element = photo_elements[p]; // –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç
            break;
        }
    }

    if (!photo_element) // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ
        return context.reply("‚ùå –Ø –Ω–µ —É–º–µ—é —Ç–∞–∫–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å.. –ü—Ä–æ—Å—Ç–∏ :(\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://vk.com/@megabot_club-command-photo");

    let photo = GetRandomAnswer(await GetPhotosInAlbum(GetRandomRandomAnswer(photo_element.ids), photo_element.count)); // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Ñ–æ—Ç–æ —Å —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∞–ª—å–±–æ–º–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

    context.reply(
        photo_element.text,
        {
            attachment: `photo${photo.owner_id}_${photo.id}` // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        }
    );
});

new Command(/^—Ñ–∞–∫—Ç/i, async function(text, context) // –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
{
    await needle.get(`https://randstuff.ru/fact/`, function(error, res) 
    {
        if (error || res.statusCode != 200)
            return console.debug("RANDSTUFF PARSING ERROR!");

        var $ = cheerio.load(res.body);

        context.reply("üîî " + ($("#fact")[0].children[0].children[0].children[0].children[0].children[0].data));
    });
});

new Command(/^–º—É–¥—Ä–æ—Å—Ç—å/i, async function(text, context) // –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
{
    await needle.get(`https://randstuff.ru/saying/`, function(error, res) 
    {
        if (error || res.statusCode != 200)
            return console.debug("RANDSTUFF PARSING ERROR!");

        var $ = cheerio.load(res.body);

        context.reply("üë®‚Äçüíº " + ($("#saying")[0].children[0].children[0].children[0].children[0].children[0].data));
    });
});

new Command(/^(–ø–æ—Å—á–∏—Ç–∞–π|–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä|—Å–∫–æ–ª—å–∫–æ\s–±—É–¥–µ—Ç\s)/i, async function(text, context) // –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
{
    text = this.removeKey(text);

    if (text.length <= 0)
    {
        context.reply(`‚ö† –í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.`);
        return;
    }

    text = text.replace(/[^+-/*\d()]/ig, '').trim();

    try
    {
        context.reply("‚ú® –û—Ç–≤–µ—Ç: " + eval(text));
    }
    catch
    {
        context.reply(`‚ö† –í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.`);
    }
});

// - - - - - - - C R O N S - - - - - - - // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑ –≤ N –≤—Ä–µ–º–µ–Ω–∏

new CronJob('0 */10 * * * *', function()
{
    GROUP.api.status.set( // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        { 
            text: `${GetLocalTime("Moscow")} | üì§: ${config.sent}`,
            group_id: "166188343",
            access_token: "#TOKEN_MAIN_PAGE#" // main
        }
    );

    GROUP.api.status.set( // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        { 
            text: `${GetLocalTime("Kiev")}`,
            access_token: "#TOKEN_MAIN_PAGE#" // main
        }
    );

    FS.writeFile(CONFIG_FILE, JSON.stringify(config), (err) => { // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–æ–ª-–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–º—Å
        if (err) console.debug(err);
    });
}, null, true, 'Europe/Moscow');


// - - - - - - - U P D A T E S - - - - - - - // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π

GROUP.updates.on('message_new', async (context) => // —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
{
	OnNewMessage(context);
});

GROUP.updates.on('chat_photo_update', async (context) => // —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–º–µ–Ω—É –∞–≤–∞—Ç–∞—Ä–∫–∏ —á–∞—Ç–∞
{
    context.send(Random(0, 1) ? "üôÑ –ú–Ω–µ —Å—Ç–∞—Ä–∞—è –∞–≤–∞ –Ω—Ä–∞–≤–∏–ª–∞—Å—å –±–æ–ª—å—à–µ." : `üõÉ –°—Ç–∞–≤–ª—é –Ω–æ–≤–æ–π –∞–≤–µ ${Random(0, 12)} –±–∞–ª–ª–æ–≤.`);
});

GROUP.updates.on('chat_invite_user', async (context) => // —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–µ—Å–µ–¥—ã
{
    context.send(`üòè –§—Å—à—ä—ä–æ—ä–æ—ä–æ—à—à—ä–æ–æ–æ! –ù—É –∫–∞ –ø—Ä–∞—Å–Ω—É–ª–∏—Å—è—è—è! [id${context.eventMemberId}|–ë–∞—Ç—è] –≤ –∑–¥–∞–Ω–∏–∏.`);
});

GROUP.updates.on('chat_kick_user', async (context) => // —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ —á–∞—Ç–∞
{
    context.send(`ü§® [id${context.eventMemberId}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –ø–æ–∫–∏–Ω—É–ª –Ω–∞—à—É –±–µ—Å–µ–¥—É :(`);
});

GROUP.updates.start(); // –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π